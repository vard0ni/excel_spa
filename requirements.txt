Разработка SPA, которое будет работать на JavaScript/HTML

1) Webpack (imports/exports) - сборщик проектов, где указывается входная точка для приложения, которая будет подтягивать другие
модули, которые мы будем описывать. Webpack собирает их в один js-файл при этом он будет обрабатывать различные форматы через Babel.
    ~ Babel - транспайлер js кода, который переводит его из новых версий в определённые старые версии.
    ~ Scss - препроцессор, для обработки чистого css.
    ~ Eslint
    ~ 2 Modes:

        - Dev (то что не видит пользователь)
            Dev Server (авто перезагрузка окна браузера, если произошли изменения в коде)
            SourceMaps (исходные карты для scss-файлов, чтобы понимать где мы находимся и какие стили написали)
            Eslint (подержка чистоты кода, содержание кода в едином стиле)
            Not Minified JS & CSS (не менифицируем, так как это занимает некоторое ко-во времени)

        - Prod (то что видит конечный пользователь)
            Minified Code


2) Git - позволяет следить за версионостью приложения. Чем сложнее код и больше взаимодействий, тем важнее данная система.
    ~ GitFlow - способ взаимодействия с git.
    Пример: разрабатываю сайт ВК, где 60 млн. активных пользователей в год. Заказчик говорит, что нужно внедрить новую фичю,
    например - добавить рекламу для аудио-треков. Но если разработчик допустит ошибку на рабочем проекте, то это можно привести
    к плачевным последствиям. Поэтому во время разработки никогда не заливаем не чего на prod версию.

        Production
            1.0.0
            0 -----------
        Development
            1.0.2
            1 ------------- +---   PR+   больше ветка кода, чем в prod
            2 ---------------- |         создание новой ветки с добавлением фичи. Зачем пробует внедрить 2 в 1 (pull request*)

*pull request - запрос на совмещение одной ветки в другую, НО это ещё не означает, что ветки будут совмещены












